import re

import aiogram
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.types import Message, ReplyKeyboardRemove
from data.config import ADMINS_ID, MAIN_ADMIN

from keyboards.default import cancel_mtu_keyboard

from loader import dp, bot, db


@dp.message_handler(Command('mtu'), user_id=ADMINS_ID)
async def mtu(message: Message, state: FSMContext):
    """Send message to user"""

    try:
        user_id = int(message.get_args())
        user = await db.get_user(user_id)

        if user:  # if user exist in database
            await message.answer('–í–ø–∏—à–∏ –Ω–∏–∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ü†ì', reply_markup=cancel_mtu_keyboard)
            await state.set_state('ConfirmMessageToUser')
            await state.update_data(user_id=user_id)
        else:  # If user not exist in database
            await message.answer("–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID —é–∑–µ—Ä–∞!")
    except:  # Wrong user ID
        await message.answer('–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')


@dp.message_handler(state='ConfirmMessageToUser')
async def send_message(message: Message, state: FSMContext):
    """Confirmed message to send"""

    if message.text == "‚¨Ö –û—Ç–º–µ–Ω–∞" or message.text.lower() == '–æ—Ç–º':  # If sending was canceled
        await message.answer('‚ùé –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞!', reply_markup=ReplyKeyboardRemove())
    else:
        data = await state.get_data()
        user_id = data.get("user_id")

        try:
            await bot.send_message(int(user_id), f"<i>–ê–î–ú–ò–ù–ò–°–¢–†–ê–¶–ò–Ø</i>\n\n{message.text}")
            await message.answer('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ!')
        except Exception as err:
            await message.answer(f'–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.\n–û—à–∏–±–∫–∞: \n\n{err}')
    await state.finish()
